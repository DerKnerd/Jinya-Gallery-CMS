# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'de'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Jinya\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Jinya\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Parameter injection
    Jinya\EventSubscriber\RedirectToInstallWizardEventSubscriber:
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'
    Jinya\EventSubscriber\RedirectToUpdaterEventSubscriber:
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'

    Jinya\Services\Theme\ThemeSyncService:
        arguments:
            $themeDirectory: '%jinya_gallery.theme.directory%'

    Jinya\Services\Theme\ThemeCompilerService:
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'

    Jinya\Services\Theme\ThemeLinkService:
        arguments:
            $themeDir: '%jinya_gallery.theme.directory%'

    Jinya\Services\Theme\ThemeService:
        arguments:
            $twigLoader: '@twig.loader.filesystem'
            $themeDirectory: '%jinya_gallery.theme.directory%'

    Jinya\Services\Media\MediaService:
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'
            $tmpDir: '%jinya_gallery.temp_dir%'

    Jinya\Services\Mailing\MailerService:
        arguments:
            $mailerSender: '%mailer_sender%'

    Jinya\Services\Users\AuthenticationService:
        arguments:
            $mailerSender: '%mailer_sender%'

    Jinya\Services\Videos\VideoUploadService:
        arguments:
            $tmpDir: '%jinya_gallery.temp_dir%'

    Jinya\Services\Media\Upload\FileUploadService:
        arguments:
            $tmpDir: '%jinya_gallery.temp_dir%'

    Jinya\Services\Cache\StaticFileCacheBuilder:
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'

    Jinya\Services\Cache\CacheStatusService:
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'
            $symfonyCacheClearer: '@cache_clearer'

    # EventSubscriber
    Jinya\EventSubscriber\HistoryEnabledEntitySubscriber:
        tags:
            - { name: doctrine.event_subscriber }

    # Formatter
    Jinya\Formatter\Gallery\ArtGalleryFormatterInterface:
        class: Jinya\Formatter\Gallery\ArtGalleryFormatter
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'
        calls:
            - [setArtworkPositionFormatter, ['@Jinya\Formatter\Artwork\ArtworkPositionFormatterInterface']]
            - [setUserFormatter, ['@Jinya\Formatter\User\UserFormatterInterface']]
    Jinya\Formatter\Gallery\VideoGalleryFormatterInterface:
        class: Jinya\Formatter\Gallery\VideoGalleryFormatter
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'
        calls:
            - [setVideoPositionFormatter, ['@Jinya\Formatter\Video\VideoPositionFormatterInterface']]
            - [setUserFormatter, ['@Jinya\Formatter\User\UserFormatterInterface']]
    Jinya\Formatter\Artwork\ArtworkPositionFormatterInterface:
        class: Jinya\Formatter\Artwork\ArtworkPositionFormatter
        calls:
            - [setGalleryFormatterInterface, ['@Jinya\Formatter\Gallery\ArtGalleryFormatterInterface']]
            - [setArtworkFormatterInterface, ['@Jinya\Formatter\Artwork\ArtworkFormatterInterface']]
    Jinya\Formatter\Artwork\ArtworkFormatterInterface:
        class: Jinya\Formatter\Artwork\ArtworkFormatter
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'
        calls:
            - [setArtworkPositionFormatter, ['@Jinya\Formatter\Artwork\ArtworkPositionFormatterInterface']]
            - [setUserFormatter, ['@Jinya\Formatter\User\UserFormatterInterface']]
    Jinya\Formatter\Video\VideoPositionFormatterInterface:
        class: Jinya\Formatter\Video\VideoPositionFormatter
        calls:
            - [setGalleryFormatterInterface, ['@Jinya\Formatter\Gallery\VideoGalleryFormatterInterface']]
            - [setVideoFormatterInterface, ['@Jinya\Formatter\Video\VideoFormatterInterface']]
            - [setYoutubeVideoFormatterInterface, ['@Jinya\Formatter\Video\YoutubeVideoFormatterInterface']]
    Jinya\Formatter\Video\VideoFormatterInterface:
        class: Jinya\Formatter\Video\VideoFormatter
        calls:
            - [setVideoPositionFormatter, ['@Jinya\Formatter\Video\VideoPositionFormatterInterface']]
    Jinya\Formatter\Form\FormFormatterInterface:
        class: Jinya\Formatter\Form\FormFormatter
        calls:
            - [setFormItemFormatter, ['@Jinya\Formatter\Form\FormItemFormatterInterface']]
            - [setUserFormatter, ['@Jinya\Formatter\User\UserFormatterInterface']]
    Jinya\Formatter\Form\FormItemFormatterInterface:
        class: Jinya\Formatter\Form\FormItemFormatter
        calls:
            - [setFormFormatter, ['@Jinya\Formatter\Form\FormFormatterInterface']]
            - [setUserFormatter, ['@Jinya\Formatter\User\UserFormatterInterface']]
    Jinya\Formatter\Menu\MenuItemFormatterInterface:
        class: Jinya\Formatter\Menu\MenuItemFormatter
        calls:
            - [setMenuFormatter, ['@Jinya\Formatter\Menu\MenuFormatterInterface']]
            - [setRouteFormatter, ['@Jinya\Formatter\Route\RouteFormatterInterface']]
    Jinya\Formatter\Route\RouteFormatterInterface:
        class: Jinya\Formatter\Route\RouteFormatter
        calls:
            - [setMenuItemFormatter, ['@Jinya\Formatter\Menu\MenuItemFormatterInterface']]
    Jinya\Formatter\Menu\MenuFormatterInterface:
        class: Jinya\Formatter\Menu\MenuFormatter
        calls:
            - [setMenuItemFormatter, ['@Jinya\Formatter\Menu\MenuItemFormatterInterface']]
    Jinya\Formatter\Media\GalleryFilePositionFormatterInterface:
        class: Jinya\Formatter\Media\GalleryFilePositionFormatter
        calls:
            - [setFileFormatter, ['@Jinya\Formatter\Media\FileFormatterInterface']]
            - [setGalleryFormatter, ['@Jinya\Formatter\Media\GalleryFormatterInterface']]
    Jinya\Formatter\Media\FileFormatterInterface:
        class: Jinya\Formatter\Media\FileFormatter
        calls:
            - [setGalleryFilePositionFormatter, ['@Jinya\Formatter\Media\GalleryFilePositionFormatterInterface']]
    Jinya\Formatter\Media\GalleryFormatterInterface:
        class: Jinya\Formatter\Media\GalleryFormatter
        calls:
            - [setGalleryFilePositionFormatter, ['@Jinya\Formatter\Media\GalleryFilePositionFormatterInterface']]
    Jinya\Formatter\User\UserFormatterInterface:
        class: Jinya\Formatter\User\UserFormatter
        arguments:
            $roleHierarchy: '@security.role_hierarchy'
        calls:
            - [setPageFormatter, ['@Jinya\Formatter\Page\PageFormatterInterface']]
            - [setGalleryFormatter, ['@Jinya\Formatter\Gallery\ArtGalleryFormatterInterface']]
            - [setArtworkFormatter, ['@Jinya\Formatter\Artwork\ArtworkFormatterInterface']]
            - [setFormFormatter, ['@Jinya\Formatter\Form\FormFormatterInterface']]

    # Controllers
    Jinya\Controller\InstallController:
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'
        tags: ['controller.service_arguments']
    Jinya\Controller\UpdateController:
        arguments:
            $currentVersion: '%jinya_version%'
            $kernelProjectDir: '%kernel.project_dir%'
            $cacheClearer: '@cache_clearer'
        tags: ['controller.service_arguments']
    Jinya\Controller\Api\Maintenance\ChangelogController:
        arguments:
            $jinyaVersion: '%jinya_version%'
            $kernelProjectDir: '%kernel.project_dir%'
        tags: ['controller.service_arguments']
    Jinya\Controller\Api\Support\BugController:
        calls:
            - [setJinyaVersion, ['%jinya_version%']]
        tags: ['controller.service_arguments']
    Jinya\Controller\Api\Maintenance\VersionController:
        calls:
            - [setJinyaVersion, ['%jinya_version%']]
        tags: ['controller.service_arguments']
    Jinya\Controller\Api\Maintenance\UpdateController:
        calls:
            - [setKernelProjectDir, ['%kernel.project_dir%']]
        tags: ['controller.service_arguments']
    Jinya\Controller\Api\Media\FileContentController:
        calls:
            - [setKernelProjectDir, ['%kernel.project_dir%']]
        tags: ['controller.service_arguments']

    # Security
    Jinya\Framework\Security\UserVoter:
        tags:
            - { name: security.voter }

    # Components

    # Twig
    Jinya\Twig\Extension\TranslationUtils:
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'

    # Commands
    Jinya\Command\CreateThemeCommand:
        arguments:
            $themesDir: '%jinya_gallery.theme.directory%'
    Jinya\Command\Install\CreateDbCommand:
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'
    Jinya\Command\Import\BulkImportFiles:
        arguments:
            $kernelProjectDir: '%kernel.project_dir%'

    # External Services
    GuzzleHttp\Client:

    Symfony\Contracts\Translation\LocaleAwareInterface:
        alias: translator.default

    Symfony\Component\Mime\MimeTypes:
        alias: mime_types

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

